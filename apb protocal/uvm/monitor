class apb_mon extends uvm_monitor;
  `uvm_component_utils(apb_mon)
  
  uvm_analysis_port#(apb_seq_item) mon_ap;
  
apb_seq_item tx;
  
virtual apb_if vif;
  
  function new(string name="",uvm_component parent);
    super.new(name,parent);
 endfunction

 function void build_phase(uvm_phase phase);
 super.build_phase(phase);
   tx=apb_seq_item::type_id::create("tx");
   mon_ap=new("mon_ap",this);
   
   if(!uvm_config_db#(virtual apb_if)::get(this,"","intf",vif))
 `uvm_error("MON","Unable to access Interface");
 endfunction



  task run_phase(uvm_phase phase);
 forever 
   begin
 @(posedge vif.pclk);
 if(!vif.presetn)
 begin
 tx.op = rst;
   mon_ap.write(tx);
 end
   
 else if (vif.presetn && vif.pwrite)
 begin
 @(negedge vif.pready);
 tx.op = writed;
 tx.PWDATA = vif.pwdata;
 tx.PADDR = vif.paddr;
 tx.PSLVERR = vif.pslverr;
   mon_ap.write(tx);
 end
   
 else if (vif.presetn && !vif.pwrite)
 begin
 @(negedge vif.pready);
 tx.op = readd;
 tx.PADDR = vif.paddr;
 tx.PRDATA = vif.prdata;
 tx.PSLVERR = vif.pslverr;
   mon_ap.write(tx);
 end

 end
 endtask
endclass
